// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Uwp.SQLite.Model;

namespace Uwp.SQLite.Model.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.25");

            modelBuilder.Entity("Uwp.SQLite.Model.CheckList", b =>
                {
                    b.Property<int>("CheckListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CheckListCreate_On")
                        .HasColumnType("TEXT");

                    b.Property<string>("CheckListName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("HasStep")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NoteId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Percent")
                        .HasColumnType("REAL");

                    b.HasKey("CheckListId");

                    b.HasIndex("NoteId");

                    b.ToTable("CheckLists");
                });

            modelBuilder.Entity("Uwp.SQLite.Model.Folder", b =>
                {
                    b.Property<int>("FolderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FolderCreate_On")
                        .HasColumnType("TEXT");

                    b.Property<string>("FolderName")
                        .HasColumnType("TEXT");

                    b.Property<int>("PlanId")
                        .HasColumnType("INTEGER");

                    b.HasKey("FolderId");

                    b.HasIndex("PlanId");

                    b.ToTable("Folders");
                });

            modelBuilder.Entity("Uwp.SQLite.Model.Note", b =>
                {
                    b.Property<int>("NoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AmountStep")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FolderId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("NoteCreate_On")
                        .HasColumnType("TEXT");

                    b.Property<string>("NoteDescription")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("NoteDueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("NoteName")
                        .HasColumnType("TEXT");

                    b.Property<int>("StepCompleted")
                        .HasColumnType("INTEGER");

                    b.HasKey("NoteId");

                    b.HasIndex("FolderId");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("Uwp.SQLite.Model.Plan", b =>
                {
                    b.Property<int>("PlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("PlanCreate_On")
                        .HasColumnType("TEXT");

                    b.Property<string>("PlanName")
                        .HasColumnType("TEXT");

                    b.HasKey("PlanId");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("Uwp.SQLite.Model.Step", b =>
                {
                    b.Property<int>("StepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CheckListId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StepCreate_On")
                        .HasColumnType("TEXT");

                    b.Property<string>("StepName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("StepStatus")
                        .HasColumnType("INTEGER");

                    b.HasKey("StepId");

                    b.HasIndex("CheckListId");

                    b.ToTable("Steps");
                });

            modelBuilder.Entity("Uwp.SQLite.Model.CheckList", b =>
                {
                    b.HasOne("Uwp.SQLite.Model.Note", "Note")
                        .WithMany("NoteCheckLists")
                        .HasForeignKey("NoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Uwp.SQLite.Model.Folder", b =>
                {
                    b.HasOne("Uwp.SQLite.Model.Plan", "Plan")
                        .WithMany("PlanFolders")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Uwp.SQLite.Model.Note", b =>
                {
                    b.HasOne("Uwp.SQLite.Model.Folder", "Folder")
                        .WithMany("FolderNotes")
                        .HasForeignKey("FolderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Uwp.SQLite.Model.Step", b =>
                {
                    b.HasOne("Uwp.SQLite.Model.CheckList", "CheckList")
                        .WithMany("CheckListSteps")
                        .HasForeignKey("CheckListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
